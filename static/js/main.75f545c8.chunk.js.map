{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","classNames","TodoList","todos","map","getNewUser","userId","usersFromServer","find","App","useState","newTitle","setNewTitle","newUserId","setnewUserId","newTitleError","setnewTitleError","newUserIdError","setnewUserIdError","newTodos","setNewTodos","action","method","onSubmit","event","preventDefault","newTodo","Math","max","prevTodos","addNewTodo","htmlFor","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.75f545c8.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${email}`}\n    >\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    completed,\n    user,\n    title,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo',\n        { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          todo={todo}\n          key={todo.id}\n        />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport React, { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nconst getNewUser = (userId: number): User | null => {\n  return usersFromServer.find(\n    user => user.id === userId,\n  ) || null;\n};\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getNewUser(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [newTitle, setNewTitle] = useState('');\n  const [newUserId, setnewUserId] = useState(0);\n  const [newTitleError, setnewTitleError] = useState(false);\n  const [newUserIdError, setnewUserIdError] = useState(false);\n  const [newTodos, setNewTodos] = useState(todos);\n\n  const addNewTodo = () => {\n    if (newUserId && newTitle) {\n      const newTodo = {\n        id: Math.max(...newTodos.map(todo => todo.id)) + 1,\n        userId: newUserId,\n        completed: false,\n        title: newTitle,\n        user: getNewUser(newUserId),\n      };\n\n      setNewTodos((prevTodos) => ([...prevTodos, newTodo]));\n      setnewUserId(0);\n      setNewTitle('');\n      setnewUserIdError(false);\n      setnewTitleError(false);\n    }\n\n    if (!newTitle) {\n      setnewTitleError(true);\n    }\n\n    if (!newUserId) {\n      setnewUserIdError(true);\n    }\n  };\n\n  const isSubmitted = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    addNewTodo();\n  };\n\n  const handleTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setNewTitle(event.target.value);\n    setnewTitleError(false);\n  };\n\n  const handleUserId = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setnewUserId(+event.target.value);\n    setnewUserIdError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={isSubmitted}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={newTitle}\n            onChange={handleTitle}\n          />\n          {newTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userId\">User: </label>\n          <select\n            data-cy=\"userSelect\"\n            value={newUserId}\n            onChange={handleUserId}\n            name=\"user\"\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option\n                value={user.id}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {newUserIdError && (\n            <span\n              className=\"error\"\n            >\n              Please choose a user\n            </span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n      <TodoList todos={newTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}